CCS PCM C Compiler, Version 4.074, 38112               17-abr-19 12:59

               Filename: C:\Users\Raulstar\Google Drive\Cronometro MaterChef\Cronometro MaterChef 11.lst

               ROM used: 601 words (7%)
                         Largest free fragment is 2048
               RAM used: 34 (9%) at main() level
                         34 (9%) worst case
               Stack:    3 worst case (2 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   108
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  MOVLW  8C
001A:  MOVWF  04
001B:  BTFSS  00.0
001C:  GOTO   01F
001D:  BTFSC  0C.0
001E:  GOTO   038
001F:  MOVLW  8C
0020:  MOVWF  04
0021:  BTFSS  00.1
0022:  GOTO   025
0023:  BTFSC  0C.1
0024:  GOTO   03B
0025:  MOVF   22,W
0026:  MOVWF  04
0027:  MOVF   23,W
0028:  MOVWF  77
0029:  MOVF   24,W
002A:  MOVWF  78
002B:  MOVF   25,W
002C:  MOVWF  79
002D:  MOVF   26,W
002E:  MOVWF  7A
002F:  MOVF   27,W
0030:  MOVWF  7B
0031:  MOVF   20,W
0032:  MOVWF  0A
0033:  SWAPF  21,W
0034:  MOVWF  03
0035:  SWAPF  7F,F
0036:  SWAPF  7F,W
0037:  RETFIE
0038:  BCF    0A.3
0039:  BCF    0A.4
003A:  GOTO   03E
003B:  BCF    0A.3
003C:  BCF    0A.4
003D:  GOTO   054
.................... /******************************************************************************* 
.................... *               
.................... *                             Auto Robotica 
.................... * 
.................... * Cronometro Master Chef:   Marco de 2019                                Raul S F 
.................... ******************************************************************************** 
.................... ******************************************************************************** 
.................... * Historico 
.................... * Revisao  
.................... * Revisao  
.................... * Revisao  
.................... ******************************************************************************** 
.................... */ 
....................  
.................... #include <16f877a.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
.................... * Configurações para gravação * 
.................... * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
....................  
.................... #FUSES WDT, HS, PUT, NOPROTECT, NODEBUG, NOBROWNOUT, NOLVP, NOCPD 
.................... #use delay(clock=4000000) 
*
0090:  MOVLW  3B
0091:  MOVWF  04
0092:  BCF    03.7
0093:  MOVF   00,W
0094:  BTFSC  03.2
0095:  GOTO   0A4
0096:  MOVLW  01
0097:  MOVWF  78
0098:  CLRF   77
0099:  DECFSZ 77,F
009A:  GOTO   099
009B:  DECFSZ 78,F
009C:  GOTO   098
009D:  MOVLW  4A
009E:  MOVWF  77
009F:  DECFSZ 77,F
00A0:  GOTO   09F
00A1:  GOTO   0A2
00A2:  DECFSZ 00,F
00A3:  GOTO   096
00A4:  RETLW  00
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
.................... * Definição e inicialização dos port's *' 
.................... * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
....................  
.................... #use fast_io(a) 
.................... #use standard_io(b) 
.................... #use fast_io(c) 
.................... #use fast_io(d) 
.................... //#use fast_io(b) 
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
.................... * Definição e inicialização das variáveis * 
.................... * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
.................... long int tempo=0; 
*
0113:  BCF    03.5
0114:  CLRF   28
0115:  CLRF   29
.................... int cont=0; 
0116:  CLRF   2A
.................... int sensor1=0; 
0117:  CLRF   2B
.................... int sensor2=0; 
0118:  CLRF   2C
.................... int start=0; 
0119:  CLRF   2D
.................... int direcao=0; 
011A:  CLRF   2E
.................... int teste=0; 
011B:  CLRF   2F
.................... int rev=0; 
011C:  CLRF   30
.................... long int aux=0; 
011D:  CLRF   31
011E:  CLRF   32
.................... int pisca=0; 
011F:  CLRF   33
.................... int f_pisca=0;  
0120:  CLRF   34
.................... int pausa=0; 
0121:  CLRF   35
....................  
.................... Void zera(){ 
....................    output_low(pin_c0);//led 60 
*
00A5:  BCF    07.0
....................    output_low(pin_c1);//led 120 
00A6:  BCF    07.1
....................    output_low(pin_c2);//led 180 
00A7:  BCF    07.2
....................    output_high(pin_d1);//direcao 1 
00A8:  BSF    08.1
....................    output_high(pin_d3);//direção  
00A9:  BSF    08.3
....................    if(input(pin_b0)==0){ 
00AA:  BSF    03.5
00AB:  BSF    06.0
00AC:  BCF    03.5
00AD:  BTFSC  06.0
00AE:  GOTO   0B1
....................    sensor1=1; 
00AF:  MOVLW  01
00B0:  MOVWF  2B
....................    } 
....................    if(input(pin_b1)==0){ 
00B1:  BSF    03.5
00B2:  BSF    06.1
00B3:  BCF    03.5
00B4:  BTFSC  06.1
00B5:  GOTO   0B8
....................    sensor2=1; 
00B6:  MOVLW  01
00B7:  MOVWF  2C
....................    } 
....................     
.................... while((sensor1==1)||(sensor2==1)){ 
00B8:  DECFSZ 2B,W
00B9:  GOTO   0BB
00BA:  GOTO   0BD
00BB:  DECFSZ 2C,W
00BC:  GOTO   0DF
....................    if(sensor1==1){ 
00BD:  DECFSZ 2B,W
00BE:  GOTO   0CE
....................    restart_wdt(); 
00BF:  CLRWDT
....................    output_high(pin_d0);//habilita drive 
00C0:  BSF    08.0
....................    output_high(pin_d2);//pulso motor1 
00C1:  BSF    08.2
....................    delay_ms(2); 
00C2:  MOVLW  02
00C3:  MOVWF  3B
00C4:  CALL   090
....................    output_low(pin_d2);//pulso motor1  
00C5:  BCF    08.2
....................    delay_ms(2);     
00C6:  MOVLW  02
00C7:  MOVWF  3B
00C8:  CALL   090
....................       if(input(pin_b0)==1)sensor1=0; 
00C9:  BSF    03.5
00CA:  BSF    06.0
00CB:  BCF    03.5
00CC:  BTFSC  06.0
00CD:  CLRF   2B
....................       } 
....................          if(sensor2==1){ 
00CE:  DECFSZ 2C,W
00CF:  GOTO   0DE
....................          output_high(pin_d0);//habilita drive 
00D0:  BSF    08.0
....................          output_high(pin_d4);//pulso motor2 
00D1:  BSF    08.4
....................          delay_ms(2); 
00D2:  MOVLW  02
00D3:  MOVWF  3B
00D4:  CALL   090
....................          output_low(pin_d4);//pulso motor2 
00D5:  BCF    08.4
....................          delay_ms(2);       
00D6:  MOVLW  02
00D7:  MOVWF  3B
00D8:  CALL   090
....................             if(input(pin_b1)==1)sensor2=0; 
00D9:  BSF    03.5
00DA:  BSF    06.1
00DB:  BCF    03.5
00DC:  BTFSC  06.1
00DD:  CLRF   2C
....................       } 
....................    } 
00DE:  GOTO   0B8
.................... } 
00DF:  RETLW  00
....................  
.................... void reverso(){ 
.................... //1,8°/3600= 
.................... aux=tempo*2; 
00E0:  BCF    03.0
00E1:  RLF    28,W
00E2:  MOVWF  31
00E3:  RLF    29,W
00E4:  MOVWF  32
....................  
....................    while(aux>0){ 
00E5:  MOVF   31,F
00E6:  BTFSS  03.2
00E7:  GOTO   0EB
00E8:  MOVF   32,F
00E9:  BTFSC  03.2
00EA:  GOTO   102
....................    restart_wdt(); 
00EB:  CLRWDT
....................    aux--;    
00EC:  MOVF   31,W
00ED:  BTFSC  03.2
00EE:  DECF   32,F
00EF:  DECF   31,F
....................    output_high(pin_d2);//pulso motor1 
00F0:  BSF    08.2
....................    delay_ms(2); 
00F1:  MOVLW  02
00F2:  MOVWF  3B
00F3:  CALL   090
....................    output_low(pin_d2);//pulso motor1  
00F4:  BCF    08.2
....................    delay_ms(2); 
00F5:  MOVLW  02
00F6:  MOVWF  3B
00F7:  CALL   090
....................           
....................    output_high(pin_d0);//habilita drive 
00F8:  BSF    08.0
....................    output_high(pin_d4);//pulso motor2 
00F9:  BSF    08.4
....................    delay_ms(2); 
00FA:  MOVLW  02
00FB:  MOVWF  3B
00FC:  CALL   090
....................    output_low(pin_d4);//pulso motor2 
00FD:  BCF    08.4
....................    delay_ms(2); 
00FE:  MOVLW  02
00FF:  MOVWF  3B
0100:  CALL   090
....................    } 
0101:  GOTO   0E5
....................    cont=0; 
0102:  CLRF   2A
....................    rev=1; 
0103:  MOVLW  01
0104:  MOVWF  30
.................... } 
0105:  BCF    0A.3
0106:  BCF    0A.4
0107:  GOTO   1F4 (RETURN)
....................  
....................  #int_TIMER1 
....................  void  TIMER1_isr(void){ 
....................  restart_wdt(); 
*
003E:  CLRWDT
....................    pisca++; 
003F:  INCF   33,F
....................       if(pisca==1){ 
0040:  DECFSZ 33,W
0041:  GOTO   050
....................       pisca=0; 
0042:  CLRF   33
....................       f_pisca=!f_pisca; 
0043:  MOVF   34,F
0044:  BTFSC  03.2
0045:  GOTO   048
0046:  MOVLW  00
0047:  GOTO   049
0048:  MOVLW  01
0049:  MOVWF  34
....................       if(f_pisca==0){ 
004A:  MOVF   34,F
004B:  BTFSS  03.2
004C:  GOTO   04F
....................       output_low(pin_c3);//led start 
004D:  BCF    07.3
....................       } 
....................       else output_high(pin_c3);//led start 
004E:  GOTO   050
004F:  BSF    07.3
....................       } 
....................  } 
....................  
0050:  BCF    0C.0
0051:  BCF    0A.3
0052:  BCF    0A.4
0053:  GOTO   025
.................... #int_TIMER2 
.................... void  TIMER2_isr(void){ 
.................... static long acumulador=69;//33=estouro 4,5s 
*
0122:  MOVLW  45
0123:  MOVWF  36
0124:  CLRF   37
.................... static int i=0; 
0125:  CLRF   38
....................     
.................... restart_wdt(); 
*
0054:  CLRWDT
....................    if(tempo!=0){    
0055:  MOVF   28,F
0056:  BTFSS  03.2
0057:  GOTO   05B
0058:  MOVF   29,F
0059:  BTFSC  03.2
005A:  GOTO   07A
....................       if(acumulador>0){ 
005B:  MOVF   36,F
005C:  BTFSS  03.2
005D:  GOTO   061
005E:  MOVF   37,F
005F:  BTFSC  03.2
0060:  GOTO   066
....................       acumulador--; 
0061:  MOVF   36,W
0062:  BTFSC  03.2
0063:  DECF   37,F
0064:  DECF   36,F
....................       } 
....................       else{ 
0065:  GOTO   079
....................       tempo--; 
0066:  MOVF   28,W
0067:  BTFSC  03.2
0068:  DECF   29,F
0069:  DECF   28,F
....................       acumulador=69; 
006A:  CLRF   37
006B:  MOVLW  45
006C:  MOVWF  36
....................          if(i==0){ 
006D:  MOVF   38,F
006E:  BTFSS  03.2
006F:  GOTO   076
....................          output_high(pin_d2); //pulso motor1 
0070:  BSF    08.2
....................          output_high(pin_d4); 
0071:  BSF    08.4
....................          i=1; 
0072:  MOVLW  01
0073:  MOVWF  38
....................          teste++; 
0074:  INCF   2F,F
....................          } 
....................          else{ 
0075:  GOTO   079
....................          output_low(pin_d2); //pulso motor1 
0076:  BCF    08.2
....................          output_low(pin_d4); 
0077:  BCF    08.4
....................          i=0; 
0078:  CLRF   38
....................          } 
....................          } 
....................        
....................    } 
....................    else{ 
0079:  GOTO   08C
....................    cont=0; 
007A:  CLRF   2A
....................    disable_interrupts(INT_TIMER2); 
007B:  BSF    03.5
007C:  BCF    0C.1
....................    output_low(pin_e0);//led 15 
007D:  BCF    09.0
007E:  BCF    03.5
007F:  BCF    09.0
....................    output_low(pin_e1);//led 30 
0080:  BSF    03.5
0081:  BCF    09.1
0082:  BCF    03.5
0083:  BCF    09.1
....................    output_low(pin_e2);//led 45 
0084:  BSF    03.5
0085:  BCF    09.2
0086:  BCF    03.5
0087:  BCF    09.2
....................    output_low(pin_c0);//led 60 
0088:  BCF    07.0
....................    output_low(pin_c1);//led 120 
0089:  BCF    07.1
....................    output_low(pin_c2);//led 180 
008A:  BCF    07.2
....................    output_low(pin_c3);//led start 
008B:  BCF    07.3
....................     
....................    } 
.................... } 
....................  
.................... //360°/1,8º=200 passos p volta 
.................... //motor 200 passo/rev 
....................  
008C:  BCF    0C.1
008D:  BCF    0A.3
008E:  BCF    0A.4
008F:  GOTO   025
.................... void main(void) { 
*
0108:  CLRF   04
0109:  BCF    03.7
010A:  MOVLW  1F
010B:  ANDWF  03,F
010C:  BSF    03.5
010D:  BSF    1F.0
010E:  BSF    1F.1
010F:  BSF    1F.2
0110:  BCF    1F.3
0111:  MOVLW  07
0112:  MOVWF  1C
.................... //   setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
.................... //   setup_wdt(WDT_1152MS); 
....................    setup_timer_2(T2_DIV_BY_16,255,16);//65,5ms 
*
0127:  MOVLW  78
0128:  MOVWF  78
0129:  IORLW  06
012A:  MOVWF  12
012B:  MOVLW  FF
012C:  BSF    03.5
012D:  MOVWF  12
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_8); 
012E:  MOVLW  B5
012F:  BCF    03.5
0130:  MOVWF  10
....................    disable_interrupts(INT_TIMER1); 
0131:  BSF    03.5
0132:  BCF    0C.0
....................    disable_interrupts(INT_TIMER2); 
0133:  BCF    0C.1
....................    disable_interrupts(INT_EXT);; 
0134:  BCF    03.5
0135:  BCF    0B.4
....................    disable_interrupts(INT_CCP1); 
0136:  BSF    03.5
0137:  BCF    0C.2
....................    setup_comparator(NC_NC_NC_NC); 
0138:  MOVLW  07
0139:  MOVWF  1C
013A:  MOVF   05,W
013B:  MOVLW  03
013C:  MOVWF  77
013D:  DECFSZ 77,F
013E:  GOTO   13D
013F:  MOVF   1C,W
0140:  BCF    03.5
0141:  BCF    0D.6
....................    setup_vref(FALSE); 
0142:  BSF    03.5
0143:  CLRF   1D
....................    set_tris_a(0b11111111); 
0144:  MOVLW  FF
0145:  MOVWF  05
....................    set_tris_b(0b11000111); 
0146:  MOVLW  C7
0147:  MOVWF  06
....................    set_tris_c(0b11110000); 
0148:  MOVLW  F0
0149:  MOVWF  07
....................    set_tris_d(0b00000000); 
014A:  MOVLW  00
014B:  MOVWF  08
....................    set_tris_e(0b00000000); 
014C:  BCF    09.0
014D:  BCF    09.1
014E:  BCF    09.2
....................    output_low(pin_e0); 
014F:  BCF    09.0
0150:  BCF    03.5
0151:  BCF    09.0
....................    output_low(pin_e1);//led 30 
0152:  BSF    03.5
0153:  BCF    09.1
0154:  BCF    03.5
0155:  BCF    09.1
....................    output_low(pin_e2);//led 45 
0156:  BSF    03.5
0157:  BCF    09.2
0158:  BCF    03.5
0159:  BCF    09.2
....................    output_high(pin_d0);//habilita drive 
015A:  BSF    08.0
....................    output_low(pin_c0);//led 60 
015B:  BCF    07.0
....................    output_low(pin_c1);//led 120 
015C:  BCF    07.1
....................    output_low(pin_c2);//led 180 
015D:  BCF    07.2
....................    output_low(pin_c3);//led start 
015E:  BCF    07.3
....................    enable_interrupts(GLOBAL); 
015F:  MOVLW  C0
0160:  IORWF  0B,F
....................     
....................    zera(); 
0161:  CALL   0A5
....................     
....................    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
....................    * Loop principal * 
....................    * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
....................       while(TRUE){ 
....................       restart_wdt(); 
0162:  CLRWDT
....................          if((input(pin_a0)==1)){//15 minutos 
0163:  BTFSS  05.0
0164:  GOTO   16E
....................          tempo=50;//=15 minutos 
0165:  CLRF   29
0166:  MOVLW  32
0167:  MOVWF  28
....................          output_high(pin_e0);//led 15 
0168:  BSF    03.5
0169:  BCF    09.0
016A:  BCF    03.5
016B:  BSF    09.0
....................          cont=1; 
016C:  MOVLW  01
016D:  MOVWF  2A
....................          } 
....................           
....................          if((input(pin_a1)==1)){//30 minutos 
016E:  BTFSS  05.1
016F:  GOTO   179
....................          tempo=100;//=30 minutos 
0170:  CLRF   29
0171:  MOVLW  64
0172:  MOVWF  28
....................          output_high(pin_e1);//led 30 
0173:  BSF    03.5
0174:  BCF    09.1
0175:  BCF    03.5
0176:  BSF    09.1
....................          cont=1; 
0177:  MOVLW  01
0178:  MOVWF  2A
....................          } 
....................           
....................          if((input(pin_a2)==1)){//45 minutos 
0179:  BTFSS  05.2
017A:  GOTO   184
....................          tempo=150;//=45 minutos 
017B:  CLRF   29
017C:  MOVLW  96
017D:  MOVWF  28
....................          output_high(pin_e2);//led 45 
017E:  BSF    03.5
017F:  BCF    09.2
0180:  BCF    03.5
0181:  BSF    09.2
....................          cont=1; 
0182:  MOVLW  01
0183:  MOVWF  2A
....................          } 
....................           
....................          if((input(pin_a3)==1)){//60... minutos 
0184:  BTFSS  05.3
0185:  GOTO   1C8
....................             static int acum=0; 
*
0126:  CLRF   39
....................             if(acum==3){ 
*
0186:  MOVF   39,W
0187:  SUBLW  03
0188:  BTFSS  03.2
0189:  GOTO   18B
....................             acum=0; 
018A:  CLRF   39
....................             } 
....................              
....................             if(acum==2){ 
018B:  MOVF   39,W
018C:  SUBLW  02
018D:  BTFSS  03.2
018E:  GOTO   1A1
....................             tempo=600;//=180 minutos 
018F:  MOVLW  02
0190:  MOVWF  29
0191:  MOVLW  58
0192:  MOVWF  28
....................             acum=3; 
0193:  MOVLW  03
0194:  MOVWF  39
....................             output_low(pin_c0);//led 60 
0195:  BCF    07.0
....................             output_low(pin_c1);//led 120 
0196:  BCF    07.1
....................             output_high(pin_c2);//led 180 
0197:  BSF    07.2
....................             delay_ms(400); 
0198:  MOVLW  02
0199:  MOVWF  3A
019A:  MOVLW  C8
019B:  MOVWF  3B
019C:  CALL   090
019D:  DECFSZ 3A,F
019E:  GOTO   19A
....................             cont=1; 
019F:  MOVLW  01
01A0:  MOVWF  2A
....................             } 
....................          
....................             if(acum==1){ 
01A1:  DECFSZ 39,W
01A2:  GOTO   1B4
....................             tempo=400;//=120 minutos 
01A3:  MOVLW  01
01A4:  MOVWF  29
01A5:  MOVLW  90
01A6:  MOVWF  28
....................             acum=2; 
01A7:  MOVLW  02
01A8:  MOVWF  39
....................             output_low(pin_c0);//led 60 
01A9:  BCF    07.0
....................             output_high(pin_c1);//led 120 
01AA:  BSF    07.1
....................             output_low(pin_c2);//led 180 
01AB:  BCF    07.2
....................             delay_ms(400); 
01AC:  MOVWF  3A
01AD:  MOVLW  C8
01AE:  MOVWF  3B
01AF:  CALL   090
01B0:  DECFSZ 3A,F
01B1:  GOTO   1AD
....................             cont=1; 
01B2:  MOVLW  01
01B3:  MOVWF  2A
....................             } 
....................              
....................             if(acum==0){ 
01B4:  MOVF   39,F
01B5:  BTFSS  03.2
01B6:  GOTO   1C8
....................             tempo=200;//=60 minutos 
01B7:  CLRF   29
01B8:  MOVLW  C8
01B9:  MOVWF  28
....................             acum=1; 
01BA:  MOVLW  01
01BB:  MOVWF  39
....................             output_high(pin_c0);//led 60 
01BC:  BSF    07.0
....................             output_low(pin_c1);//led 120 
01BD:  BCF    07.1
....................             output_low(pin_c2);//led 180      
01BE:  BCF    07.2
....................             delay_ms(400); 
01BF:  MOVLW  02
01C0:  MOVWF  3A
01C1:  MOVLW  C8
01C2:  MOVWF  3B
01C3:  CALL   090
01C4:  DECFSZ 3A,F
01C5:  GOTO   1C1
....................             cont=1; 
01C6:  MOVLW  01
01C7:  MOVWF  2A
....................             } 
....................              
....................          } 
....................           
....................          if((input(pin_a4)==1)&&((cont==1)||(rev==1))){//stop 
01C8:  BTFSS  05.4
01C9:  GOTO   1DF
01CA:  DECFSZ 2A,W
01CB:  GOTO   1CD
01CC:  GOTO   1CF
01CD:  DECFSZ 30,W
01CE:  GOTO   1DF
....................             if(start==1){ 
01CF:  DECFSZ 2D,W
01D0:  GOTO   1DF
....................                disable_interrupts(INT_TIMER2); 
01D1:  BSF    03.5
01D2:  BCF    0C.1
....................                enable_interrupts(INT_TIMER1); 
01D3:  BSF    0C.0
....................                //output_low(pin_c3);//led start 
....................                start=0; 
01D4:  BCF    03.5
01D5:  CLRF   2D
....................                delay_ms(400); 
01D6:  MOVLW  02
01D7:  MOVWF  3A
01D8:  MOVLW  C8
01D9:  MOVWF  3B
01DA:  CALL   090
01DB:  DECFSZ 3A,F
01DC:  GOTO   1D8
....................                pausa=1; 
01DD:  MOVLW  01
01DE:  MOVWF  35
....................                } 
....................          } 
....................           
....................          if((input(pin_a4)==1)&&((cont==1)||(rev==1))){//start 
01DF:  BTFSS  05.4
01E0:  GOTO   23B
01E1:  DECFSZ 2A,W
01E2:  GOTO   1E4
01E3:  GOTO   1E6
01E4:  DECFSZ 30,W
01E5:  GOTO   23B
....................             if(start==0){ 
01E6:  MOVF   2D,F
01E7:  BTFSS  03.2
01E8:  GOTO   23B
....................                if((input(pin_b2)==1)){//rev 
01E9:  BSF    03.5
01EA:  BSF    06.2
01EB:  BCF    03.5
01EC:  BTFSS  06.2
01ED:  GOTO   218
....................                   if(pausa==0){ 
01EE:  MOVF   35,F
01EF:  BTFSS  03.2
01F0:  GOTO   205
....................                   direcao=1; 
01F1:  MOVLW  01
01F2:  MOVWF  2E
....................                   reverso(); 
01F3:  GOTO   0E0
....................                   tempo=(tempo*4)-4; 
01F4:  RLF    28,W
01F5:  MOVWF  3A
01F6:  RLF    29,W
01F7:  MOVWF  3B
01F8:  RLF    3A,F
01F9:  RLF    3B,F
01FA:  MOVLW  FC
01FB:  ANDWF  3A,F
01FC:  MOVLW  04
01FD:  SUBWF  3A,W
01FE:  MOVWF  28
01FF:  MOVF   3B,W
0200:  MOVWF  29
0201:  MOVLW  00
0202:  BTFSS  03.0
0203:  MOVLW  01
0204:  SUBWF  29,F
....................                   } 
....................                cont=1; 
0205:  MOVLW  01
0206:  MOVWF  2A
....................                output_high(pin_d0);//habilita drive 
0207:  BSF    08.0
....................                output_low(pin_d1);//direcao 1 
0208:  BCF    08.1
....................                output_low(pin_d3);//direção 2 
0209:  BCF    08.3
....................                enable_interrupts(INT_TIMER2); 
020A:  BSF    03.5
020B:  BSF    0C.1
....................                disable_interrupts(INT_TIMER1); 
020C:  BCF    0C.0
....................                output_high(pin_c3);//led start 
020D:  BCF    03.5
020E:  BSF    07.3
....................                start=1; 
020F:  MOVWF  2D
....................                delay_ms(400); 
0210:  MOVLW  02
0211:  MOVWF  3A
0212:  MOVLW  C8
0213:  MOVWF  3B
0214:  CALL   090
0215:  DECFSZ 3A,F
0216:  GOTO   212
....................                } 
....................                 
....................                else{ 
0217:  GOTO   23B
....................                cont=1; 
0218:  MOVLW  01
0219:  MOVWF  2A
....................                output_high(pin_d0);//habilita drive 
021A:  BSF    08.0
....................                output_high(pin_d1);//direcao 1 
021B:  BSF    08.1
....................                output_high(pin_d3);//direção 2 
021C:  BSF    08.3
....................                enable_interrupts(INT_TIMER2); 
021D:  BSF    03.5
021E:  BSF    0C.1
....................                disable_interrupts(INT_TIMER1); 
021F:  BCF    0C.0
....................                output_high(pin_c3);//led start 
0220:  BCF    03.5
0221:  BSF    07.3
....................                start=1; 
0222:  MOVWF  2D
....................                tempo=(tempo*4)-4;//tempo=(tempo*2)+5; 
0223:  RLF    28,W
0224:  MOVWF  3A
0225:  RLF    29,W
0226:  MOVWF  3B
0227:  RLF    3A,F
0228:  RLF    3B,F
0229:  MOVLW  FC
022A:  ANDWF  3A,F
022B:  MOVLW  04
022C:  SUBWF  3A,W
022D:  MOVWF  28
022E:  MOVF   3B,W
022F:  MOVWF  29
0230:  MOVLW  00
0231:  BTFSS  03.0
0232:  MOVLW  01
0233:  SUBWF  29,F
....................                delay_ms(400); 
0234:  MOVLW  02
0235:  MOVWF  3A
0236:  MOVLW  C8
0237:  MOVWF  3B
0238:  CALL   090
0239:  DECFSZ 3A,F
023A:  GOTO   236
....................                } 
....................             } 
....................          }  
....................                                  
....................          if(input(pin_a5)==1){//reset 
023B:  BTFSS  05.5
023C:  GOTO   257
....................          disable_interrupts(INT_TIMER1); 
023D:  BSF    03.5
023E:  BCF    0C.0
....................          disable_interrupts(INT_TIMER2); 
023F:  BCF    0C.1
....................          cont=0; 
0240:  BCF    03.5
0241:  CLRF   2A
....................          tempo=0; 
0242:  CLRF   29
0243:  CLRF   28
....................          pisca=0; 
0244:  CLRF   33
....................          f_pisca=0;  
0245:  CLRF   34
....................          output_low(pin_e0);//led 15 
0246:  BSF    03.5
0247:  BCF    09.0
0248:  BCF    03.5
0249:  BCF    09.0
....................          output_low(pin_e1);//led 30 
024A:  BSF    03.5
024B:  BCF    09.1
024C:  BCF    03.5
024D:  BCF    09.1
....................          output_low(pin_e2);//led 45 
024E:  BSF    03.5
024F:  BCF    09.2
0250:  BCF    03.5
0251:  BCF    09.2
....................          zera(); 
0252:  CALL   0A5
....................          output_low(pin_c3);//led start 
0253:  BCF    07.3
....................          pausa=0;  
0254:  CLRF   35
....................          reset_cpu(); 
0255:  CLRF   0A
0256:  GOTO   000
....................          } 
....................              
....................       } 
0257:  GOTO   162
....................    // FIM DO PROGRAMA 
.................... } 
....................  
0258:  SLEEP

Configuration Fuses:
   Word  1: 3F36   HS WDT PUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
