CCS PCM C Compiler, Version 5.015, 38112               14-ago-19 17:03

               Filename:   D:\Google Drive\Cronometro MaterChef\Cronometro MaterChef 14.lst

               ROM used:   634 words (8%)
                           Largest free fragment is 2048
               RAM used:   32 (9%) at main() level
                           32 (9%) worst case
               Stack used: 3 locations (2 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   116
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   034
001D:  MOVLW  8C
001E:  MOVWF  04
001F:  BTFSS  00.1
0020:  GOTO   023
0021:  BTFSC  0C.1
0022:  GOTO   037
0023:  MOVF   22,W
0024:  MOVWF  04
0025:  MOVF   23,W
0026:  MOVWF  77
0027:  MOVF   24,W
0028:  MOVWF  78
0029:  MOVF   25,W
002A:  MOVWF  79
002B:  MOVF   26,W
002C:  MOVWF  7A
002D:  MOVF   20,W
002E:  MOVWF  0A
002F:  SWAPF  21,W
0030:  MOVWF  03
0031:  SWAPF  7F,F
0032:  SWAPF  7F,W
0033:  RETFIE
0034:  BCF    0A.3
0035:  BCF    0A.4
0036:  GOTO   03A
0037:  BCF    0A.3
0038:  BCF    0A.4
0039:  GOTO   050
.................... /******************************************************************************* 
.................... *               
.................... *                             Auto Robotica 
.................... * 
.................... * Cronometro Master Chef:   Marco de 2019                                Raul S F 
.................... ******************************************************************************** 
.................... ******************************************************************************** 
.................... * Historico 
.................... * Revisao  
.................... * Revisao  
.................... * Revisao  
.................... ******************************************************************************** 
.................... */ 
....................  
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
.................... * Configurações para gravação * 
.................... * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
....................  
.................... #FUSES WDT, HS, PUT, NOPROTECT, NODEBUG, NOBROWNOUT, NOLVP, NOCPD 
.................... #use delay(clock=4000000) 
*
008C:  MOVLW  3A
008D:  MOVWF  04
008E:  BCF    03.7
008F:  MOVF   00,W
0090:  BTFSC  03.2
0091:  GOTO   0A0
0092:  MOVLW  01
0093:  MOVWF  78
0094:  CLRF   77
0095:  DECFSZ 77,F
0096:  GOTO   095
0097:  DECFSZ 78,F
0098:  GOTO   094
0099:  MOVLW  4A
009A:  MOVWF  77
009B:  DECFSZ 77,F
009C:  GOTO   09B
009D:  GOTO   09E
009E:  DECFSZ 00,F
009F:  GOTO   092
00A0:  RETURN
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
.................... * Definição e inicialização dos port's *' 
.................... * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
....................  
.................... #use fast_io(a) 
.................... #use standard_io(b) 
.................... #use fast_io(c) 
.................... #use fast_io(d) 
.................... //#use fast_io(b) 
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
.................... * Definição e inicialização das variáveis * 
.................... * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
.................... long int tempo=0; 
.................... int cont=0; 
.................... int sensor1=0; 
.................... int sensor2=0; 
.................... int start=0; 
.................... int direcao=0; 
.................... int teste=0; 
.................... int rev=0; 
.................... long int aux=0; 
.................... int pisca=0; 
.................... int f_pisca=0;  
.................... int pausa=0; 
....................  
.................... Void zera(){ 
....................    output_low(pin_c0);//led 60 
00A1:  BCF    07.0
....................    output_low(pin_c1);//led 120 
00A2:  BCF    07.1
....................    output_low(pin_c2);//led 180 
00A3:  BCF    07.2
....................    output_high(pin_d1);//direcao 1 
00A4:  BSF    08.1
....................    output_high(pin_d3);//direção  
00A5:  BSF    08.3
....................    if(input(pin_b0)==0){ 
00A6:  BSF    03.5
00A7:  BSF    06.0
00A8:  BCF    03.5
00A9:  BTFSC  06.0
00AA:  GOTO   0AD
....................    sensor1=1; 
00AB:  MOVLW  01
00AC:  MOVWF  2A
....................    } 
....................    if(input(pin_b1)==0){ 
00AD:  BSF    03.5
00AE:  BSF    06.1
00AF:  BCF    03.5
00B0:  BTFSC  06.1
00B1:  GOTO   0B4
....................    sensor2=1; 
00B2:  MOVLW  01
00B3:  MOVWF  2B
....................    } 
....................     
.................... while((sensor1==1)||(sensor2==1)||(input(pin_a5)==1)){ 
00B4:  DECFSZ 2A,W
00B5:  GOTO   0B7
00B6:  GOTO   0BC
00B7:  DECFSZ 2B,W
00B8:  GOTO   0BA
00B9:  GOTO   0BC
00BA:  BTFSS  05.5
00BB:  GOTO   0E4
....................    if((sensor1==1)||(input(pin_a5)==1)){ 
00BC:  DECFSZ 2A,W
00BD:  GOTO   0BF
00BE:  GOTO   0C1
00BF:  BTFSS  05.5
00C0:  GOTO   0D0
....................    restart_wdt(); 
00C1:  CLRWDT
....................    output_high(pin_d0);//habilita drive 
00C2:  BSF    08.0
....................    output_high(pin_d2);//pulso motor1 
00C3:  BSF    08.2
....................    delay_ms(2); 
00C4:  MOVLW  02
00C5:  MOVWF  3A
00C6:  CALL   08C
....................    output_low(pin_d2);//pulso motor1  
00C7:  BCF    08.2
....................    delay_ms(2);     
00C8:  MOVLW  02
00C9:  MOVWF  3A
00CA:  CALL   08C
....................       if(input(pin_b0)==1)sensor1=0; 
00CB:  BSF    03.5
00CC:  BSF    06.0
00CD:  BCF    03.5
00CE:  BTFSC  06.0
00CF:  CLRF   2A
....................       } 
....................          if((sensor2==1)||(input(pin_a5)==1)){ 
00D0:  DECFSZ 2B,W
00D1:  GOTO   0D3
00D2:  GOTO   0D5
00D3:  BTFSS  05.5
00D4:  GOTO   0E3
....................          output_high(pin_d0);//habilita drive 
00D5:  BSF    08.0
....................          output_high(pin_d4);//pulso motor2 
00D6:  BSF    08.4
....................          delay_ms(2); 
00D7:  MOVLW  02
00D8:  MOVWF  3A
00D9:  CALL   08C
....................          output_low(pin_d4);//pulso motor2 
00DA:  BCF    08.4
....................          delay_ms(2);       
00DB:  MOVLW  02
00DC:  MOVWF  3A
00DD:  CALL   08C
....................             if(input(pin_b1)==1)sensor2=0; 
00DE:  BSF    03.5
00DF:  BSF    06.1
00E0:  BCF    03.5
00E1:  BTFSC  06.1
00E2:  CLRF   2B
....................       } 
00E3:  GOTO   0B4
....................    } 
00E4:  RETURN
.................... } 
....................  
.................... void reverso(){ 
.................... //1,8°/3600= 
.................... aux=(tempo*2)-2; 
00E5:  BCF    03.0
00E6:  RLF    27,W
00E7:  MOVWF  39
00E8:  RLF    28,W
00E9:  MOVWF  3A
00EA:  MOVLW  02
00EB:  SUBWF  39,W
00EC:  MOVWF  30
00ED:  MOVF   3A,W
00EE:  MOVWF  31
00EF:  MOVLW  00
00F0:  BTFSS  03.0
00F1:  MOVLW  01
00F2:  SUBWF  31,F
....................  
....................    while(aux>0){ 
00F3:  MOVF   30,F
00F4:  BTFSS  03.2
00F5:  GOTO   0F9
00F6:  MOVF   31,F
00F7:  BTFSC  03.2
00F8:  GOTO   110
....................    restart_wdt(); 
00F9:  CLRWDT
....................    aux--;    
00FA:  MOVF   30,W
00FB:  BTFSC  03.2
00FC:  DECF   31,F
00FD:  DECF   30,F
....................    output_high(pin_d2);//pulso motor1 
00FE:  BSF    08.2
....................    delay_ms(2); 
00FF:  MOVLW  02
0100:  MOVWF  3A
0101:  CALL   08C
....................    output_low(pin_d2);//pulso motor1  
0102:  BCF    08.2
....................    delay_ms(2); 
0103:  MOVLW  02
0104:  MOVWF  3A
0105:  CALL   08C
....................           
....................    output_high(pin_d0);//habilita drive 
0106:  BSF    08.0
....................    output_high(pin_d4);//pulso motor2 
0107:  BSF    08.4
....................    delay_ms(2); 
0108:  MOVLW  02
0109:  MOVWF  3A
010A:  CALL   08C
....................    output_low(pin_d4);//pulso motor2 
010B:  BCF    08.4
....................    delay_ms(2); 
010C:  MOVLW  02
010D:  MOVWF  3A
010E:  CALL   08C
010F:  GOTO   0F3
....................    } 
....................    cont=0; 
0110:  CLRF   29
....................    rev=1; 
0111:  MOVLW  01
0112:  MOVWF  2F
0113:  BCF    0A.3
0114:  BCF    0A.4
0115:  GOTO   205 (RETURN)
.................... } 
....................  
....................  #int_TIMER1 
....................  void  TIMER1_isr(void){ 
....................  restart_wdt(); 
*
003A:  CLRWDT
....................    pisca++; 
003B:  INCF   32,F
....................       if(pisca==1){ 
003C:  DECFSZ 32,W
003D:  GOTO   04C
....................       pisca=0; 
003E:  CLRF   32
....................       f_pisca=!f_pisca; 
003F:  MOVF   33,F
0040:  BTFSC  03.2
0041:  GOTO   044
0042:  MOVLW  00
0043:  GOTO   045
0044:  MOVLW  01
0045:  MOVWF  33
....................       if(f_pisca==0){ 
0046:  MOVF   33,F
0047:  BTFSS  03.2
0048:  GOTO   04B
....................       output_low(pin_c3);//led start 
0049:  BCF    07.3
....................       } 
004A:  GOTO   04C
....................       else output_high(pin_c3);//led start 
004B:  BSF    07.3
....................       } 
....................  } 
....................  
004C:  BCF    0C.0
004D:  BCF    0A.3
004E:  BCF    0A.4
004F:  GOTO   023
.................... #int_TIMER2 
.................... void  TIMER2_isr(void){ 
.................... static long acumulador=68;//33=estouro 4,5s 
.................... static int i=0; 
....................     
.................... restart_wdt(); 
0050:  CLRWDT
....................    if(tempo!=0){    
0051:  MOVF   27,F
0052:  BTFSS  03.2
0053:  GOTO   057
0054:  MOVF   28,F
0055:  BTFSC  03.2
0056:  GOTO   076
....................       if(acumulador>0){ 
0057:  MOVF   35,F
0058:  BTFSS  03.2
0059:  GOTO   05D
005A:  MOVF   36,F
005B:  BTFSC  03.2
005C:  GOTO   062
....................       acumulador--; 
005D:  MOVF   35,W
005E:  BTFSC  03.2
005F:  DECF   36,F
0060:  DECF   35,F
....................       } 
0061:  GOTO   075
....................       else{ 
....................       tempo--; 
0062:  MOVF   27,W
0063:  BTFSC  03.2
0064:  DECF   28,F
0065:  DECF   27,F
....................       acumulador=68; 
0066:  CLRF   36
0067:  MOVLW  44
0068:  MOVWF  35
....................          if(i==0){ 
0069:  MOVF   37,F
006A:  BTFSS  03.2
006B:  GOTO   072
....................          output_high(pin_d2); //pulso motor1 
006C:  BSF    08.2
....................          output_high(pin_d4); 
006D:  BSF    08.4
....................          i=1; 
006E:  MOVLW  01
006F:  MOVWF  37
....................          teste++; 
0070:  INCF   2E,F
....................          } 
0071:  GOTO   075
....................          else{ 
....................          output_low(pin_d2); //pulso motor1 
0072:  BCF    08.2
....................          output_low(pin_d4); 
0073:  BCF    08.4
....................          i=0; 
0074:  CLRF   37
....................          } 
....................          } 
....................        
....................    } 
0075:  GOTO   088
....................    else{ 
....................    cont=0; 
0076:  CLRF   29
....................    disable_interrupts(INT_TIMER2); 
0077:  BSF    03.5
0078:  BCF    0C.1
....................    output_low(pin_e0);//led 15 
0079:  BCF    09.0
007A:  BCF    03.5
007B:  BCF    09.0
....................    output_low(pin_e1);//led 30 
007C:  BSF    03.5
007D:  BCF    09.1
007E:  BCF    03.5
007F:  BCF    09.1
....................    output_low(pin_e2);//led 45 
0080:  BSF    03.5
0081:  BCF    09.2
0082:  BCF    03.5
0083:  BCF    09.2
....................    output_low(pin_c0);//led 60 
0084:  BCF    07.0
....................    output_low(pin_c1);//led 120 
0085:  BCF    07.1
....................    output_low(pin_c2);//led 180 
0086:  BCF    07.2
....................    output_low(pin_c3);//led start 
0087:  BCF    07.3
....................     
....................    } 
0088:  BCF    0C.1
0089:  BCF    0A.3
008A:  BCF    0A.4
008B:  GOTO   023
.................... } 
....................  
.................... //360°/1,8º=200 passos p volta 
.................... //motor 200 passo/rev 
....................  
.................... void main(void) { 
*
0116:  MOVF   03,W
0117:  ANDLW  1F
0118:  MOVWF  03
0119:  CLRF   28
011A:  CLRF   27
011B:  CLRF   29
011C:  CLRF   2A
011D:  CLRF   2B
011E:  CLRF   2C
011F:  CLRF   2D
0120:  CLRF   2E
0121:  CLRF   2F
0122:  CLRF   31
0123:  CLRF   30
0124:  CLRF   32
0125:  CLRF   33
0126:  CLRF   34
0127:  CLRF   36
0128:  MOVLW  44
0129:  MOVWF  35
012A:  CLRF   37
012B:  CLRF   38
012C:  BSF    03.5
012D:  BSF    1F.0
012E:  BSF    1F.1
012F:  BSF    1F.2
0130:  BCF    1F.3
0131:  MOVLW  07
0132:  MOVWF  1C
0133:  BCF    03.7
.................... //   setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
.................... //   setup_wdt(WDT_1152MS); 
....................    setup_timer_2(T2_DIV_BY_16,255,16);//65,5ms 
0134:  MOVLW  78
0135:  MOVWF  78
0136:  IORLW  06
0137:  BCF    03.5
0138:  MOVWF  12
0139:  MOVLW  FF
013A:  BSF    03.5
013B:  MOVWF  12
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_8); 
013C:  MOVLW  B5
013D:  BCF    03.5
013E:  MOVWF  10
....................    disable_interrupts(INT_TIMER1); 
013F:  BSF    03.5
0140:  BCF    0C.0
....................    disable_interrupts(INT_TIMER2); 
0141:  BCF    0C.1
....................    disable_interrupts(INT_EXT);; 
0142:  BCF    03.5
0143:  BCF    0B.4
....................    disable_interrupts(INT_CCP1); 
0144:  BSF    03.5
0145:  BCF    0C.2
....................    setup_comparator(NC_NC_NC_NC); 
0146:  MOVLW  07
0147:  MOVWF  1C
0148:  MOVF   05,W
0149:  MOVWF  05
014A:  MOVLW  02
014B:  MOVWF  77
014C:  DECFSZ 77,F
014D:  GOTO   14C
014E:  GOTO   14F
014F:  NOP
0150:  MOVF   1C,W
0151:  BCF    03.5
0152:  BCF    0D.6
....................    setup_vref(FALSE); 
0153:  BSF    03.5
0154:  CLRF   1D
....................    set_tris_a(0b11111111); 
0155:  MOVLW  FF
0156:  MOVWF  05
....................    set_tris_b(0b11000111); 
0157:  MOVLW  C7
0158:  MOVWF  06
....................    set_tris_c(0b11110000); 
0159:  MOVLW  F0
015A:  MOVWF  07
....................    set_tris_d(0b00000000); 
015B:  MOVLW  00
015C:  MOVWF  08
....................    set_tris_e(0b00000000); 
015D:  BCF    09.0
015E:  BCF    09.1
015F:  BCF    09.2
....................    output_low(pin_e0); 
0160:  BCF    09.0
0161:  BCF    03.5
0162:  BCF    09.0
....................    output_low(pin_e1);//led 30 
0163:  BSF    03.5
0164:  BCF    09.1
0165:  BCF    03.5
0166:  BCF    09.1
....................    output_low(pin_e2);//led 45 
0167:  BSF    03.5
0168:  BCF    09.2
0169:  BCF    03.5
016A:  BCF    09.2
....................    output_low(pin_d0);//habilita drive 
016B:  BCF    08.0
....................    output_low(pin_c0);//led 60 
016C:  BCF    07.0
....................    output_low(pin_c1);//led 120 
016D:  BCF    07.1
....................    output_low(pin_c2);//led 180 
016E:  BCF    07.2
....................    output_low(pin_c3);//led start 
016F:  BCF    07.3
....................    enable_interrupts(GLOBAL); 
0170:  MOVLW  C0
0171:  IORWF  0B,F
....................     
....................    zera(); 
0172:  CALL   0A1
....................    output_high(pin_d0);//habilita drive 
0173:  BSF    08.0
....................     
....................    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
....................    * Loop principal * 
....................    * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
....................       while(TRUE){ 
....................       restart_wdt(); 
0174:  CLRWDT
....................          if((input(pin_a0)==1)){//15 minutos 
0175:  BTFSS  05.0
0176:  GOTO   180
....................          tempo=51;//=15 minutos 
0177:  CLRF   28
0178:  MOVLW  33
0179:  MOVWF  27
....................          output_high(pin_e0);//led 15 
017A:  BSF    03.5
017B:  BCF    09.0
017C:  BCF    03.5
017D:  BSF    09.0
....................          cont=1; 
017E:  MOVLW  01
017F:  MOVWF  29
....................          } 
....................           
....................          if((input(pin_a1)==1)){//30 minutos 
0180:  BTFSS  05.1
0181:  GOTO   18B
....................          tempo=101;//=30 minutos 
0182:  CLRF   28
0183:  MOVLW  65
0184:  MOVWF  27
....................          output_high(pin_e1);//led 30 
0185:  BSF    03.5
0186:  BCF    09.1
0187:  BCF    03.5
0188:  BSF    09.1
....................          cont=1; 
0189:  MOVLW  01
018A:  MOVWF  29
....................          } 
....................           
....................          if((input(pin_a2)==1)){//45 minutos 
018B:  BTFSS  05.2
018C:  GOTO   196
....................          tempo=151;//=45 minutos 
018D:  CLRF   28
018E:  MOVLW  97
018F:  MOVWF  27
....................          output_high(pin_e2);//led 45 
0190:  BSF    03.5
0191:  BCF    09.2
0192:  BCF    03.5
0193:  BSF    09.2
....................          cont=1; 
0194:  MOVLW  01
0195:  MOVWF  29
....................          } 
....................           
....................          if((input(pin_a3)==1)){//60... minutos 
0196:  BTFSS  05.3
0197:  GOTO   1D9
....................             static int acum=0; 
....................             if(acum==3){ 
0198:  MOVF   38,W
0199:  SUBLW  03
019A:  BTFSC  03.2
....................             acum=0; 
019B:  CLRF   38
....................             } 
....................              
....................             if(acum==2){ 
019C:  MOVF   38,W
019D:  SUBLW  02
019E:  BTFSS  03.2
019F:  GOTO   1B2
....................             tempo=601;//=180 minutos 
01A0:  MOVLW  02
01A1:  MOVWF  28
01A2:  MOVLW  59
01A3:  MOVWF  27
....................             acum=3; 
01A4:  MOVLW  03
01A5:  MOVWF  38
....................             output_low(pin_c0);//led 60 
01A6:  BCF    07.0
....................             output_low(pin_c1);//led 120 
01A7:  BCF    07.1
....................             output_high(pin_c2);//led 180 
01A8:  BSF    07.2
....................             delay_ms(400); 
01A9:  MOVLW  02
01AA:  MOVWF  39
01AB:  MOVLW  C8
01AC:  MOVWF  3A
01AD:  CALL   08C
01AE:  DECFSZ 39,F
01AF:  GOTO   1AB
....................             cont=1; 
01B0:  MOVLW  01
01B1:  MOVWF  29
....................             } 
....................          
....................             if(acum==1){ 
01B2:  DECFSZ 38,W
01B3:  GOTO   1C5
....................             tempo=401;//=120 minutos 
01B4:  MOVLW  01
01B5:  MOVWF  28
01B6:  MOVLW  91
01B7:  MOVWF  27
....................             acum=2; 
01B8:  MOVLW  02
01B9:  MOVWF  38
....................             output_low(pin_c0);//led 60 
01BA:  BCF    07.0
....................             output_high(pin_c1);//led 120 
01BB:  BSF    07.1
....................             output_low(pin_c2);//led 180 
01BC:  BCF    07.2
....................             delay_ms(400); 
01BD:  MOVWF  39
01BE:  MOVLW  C8
01BF:  MOVWF  3A
01C0:  CALL   08C
01C1:  DECFSZ 39,F
01C2:  GOTO   1BE
....................             cont=1; 
01C3:  MOVLW  01
01C4:  MOVWF  29
....................             } 
....................              
....................             if(acum==0){ 
01C5:  MOVF   38,F
01C6:  BTFSS  03.2
01C7:  GOTO   1D9
....................             tempo=201;//=60 minutos 
01C8:  CLRF   28
01C9:  MOVLW  C9
01CA:  MOVWF  27
....................             acum=1; 
01CB:  MOVLW  01
01CC:  MOVWF  38
....................             output_high(pin_c0);//led 60 
01CD:  BSF    07.0
....................             output_low(pin_c1);//led 120 
01CE:  BCF    07.1
....................             output_low(pin_c2);//led 180      
01CF:  BCF    07.2
....................             delay_ms(400); 
01D0:  MOVLW  02
01D1:  MOVWF  39
01D2:  MOVLW  C8
01D3:  MOVWF  3A
01D4:  CALL   08C
01D5:  DECFSZ 39,F
01D6:  GOTO   1D2
....................             cont=1; 
01D7:  MOVLW  01
01D8:  MOVWF  29
....................             } 
....................              
....................          } 
....................           
....................          if((input(pin_a4)==1)&&((cont==1)||(rev==1))){//stop 
01D9:  BTFSS  05.4
01DA:  GOTO   1F0
01DB:  DECFSZ 29,W
01DC:  GOTO   1DE
01DD:  GOTO   1E0
01DE:  DECFSZ 2F,W
01DF:  GOTO   1F0
....................             if(start==1){ 
01E0:  DECFSZ 2C,W
01E1:  GOTO   1F0
....................                disable_interrupts(INT_TIMER2); 
01E2:  BSF    03.5
01E3:  BCF    0C.1
....................                enable_interrupts(INT_TIMER1); 
01E4:  BSF    0C.0
....................                //output_low(pin_c3);//led start 
....................                start=0; 
01E5:  BCF    03.5
01E6:  CLRF   2C
....................                delay_ms(400); 
01E7:  MOVLW  02
01E8:  MOVWF  39
01E9:  MOVLW  C8
01EA:  MOVWF  3A
01EB:  CALL   08C
01EC:  DECFSZ 39,F
01ED:  GOTO   1E9
....................                pausa=1; 
01EE:  MOVLW  01
01EF:  MOVWF  34
....................                } 
....................          } 
....................           
....................          while((input(pin_a4)==1)&&((cont==1)||(rev==1))){//start 
01F0:  BTFSS  05.4
01F1:  GOTO   25C
01F2:  DECFSZ 29,W
01F3:  GOTO   1F5
01F4:  GOTO   1F7
01F5:  DECFSZ 2F,W
01F6:  GOTO   25C
....................             if(start==0){ 
01F7:  MOVF   2C,F
01F8:  BTFSS  03.2
01F9:  GOTO   25B
....................                if((input(pin_b2)==1)){//rev 
01FA:  BSF    03.5
01FB:  BSF    06.2
01FC:  BCF    03.5
01FD:  BTFSS  06.2
01FE:  GOTO   238
....................                   if(pausa==0){ 
01FF:  MOVF   34,F
0200:  BTFSS  03.2
0201:  GOTO   225
....................                   direcao=1; 
0202:  MOVLW  01
0203:  MOVWF  2D
....................                   reverso(); 
0204:  GOTO   0E5
....................                   tempo=(tempo*4)-4; 
0205:  RLF    27,W
0206:  MOVWF  39
0207:  RLF    28,W
0208:  MOVWF  3A
0209:  RLF    39,F
020A:  RLF    3A,F
020B:  MOVLW  FC
020C:  ANDWF  39,F
020D:  MOVLW  04
020E:  SUBWF  39,W
020F:  MOVWF  27
0210:  MOVF   3A,W
0211:  MOVWF  28
0212:  MOVLW  00
0213:  BTFSS  03.0
0214:  MOVLW  01
0215:  SUBWF  28,F
....................                   output_low(pin_e0); 
0216:  BSF    03.5
0217:  BCF    09.0
0218:  BCF    03.5
0219:  BCF    09.0
....................    output_low(pin_e1);//led 30 
021A:  BSF    03.5
021B:  BCF    09.1
021C:  BCF    03.5
021D:  BCF    09.1
....................    output_low(pin_e2);//led 45 
021E:  BSF    03.5
021F:  BCF    09.2
0220:  BCF    03.5
0221:  BCF    09.2
....................    output_low(pin_c0);//led 60 
0222:  BCF    07.0
....................    output_low(pin_c1);//led 120 
0223:  BCF    07.1
....................    output_low(pin_c2);//led 180 
0224:  BCF    07.2
....................                   } 
....................                cont=1; 
0225:  MOVLW  01
0226:  MOVWF  29
....................                output_high(pin_d0);//habilita drive 
0227:  BSF    08.0
....................                output_low(pin_d1);//direcao 1 
0228:  BCF    08.1
....................                output_low(pin_d3);//direção 2 
0229:  BCF    08.3
....................                enable_interrupts(INT_TIMER2); 
022A:  BSF    03.5
022B:  BSF    0C.1
....................                disable_interrupts(INT_TIMER1); 
022C:  BCF    0C.0
....................                output_high(pin_c3);//led start 
022D:  BCF    03.5
022E:  BSF    07.3
....................                start=1; 
022F:  MOVWF  2C
....................                delay_ms(400); 
0230:  MOVLW  02
0231:  MOVWF  39
0232:  MOVLW  C8
0233:  MOVWF  3A
0234:  CALL   08C
0235:  DECFSZ 39,F
0236:  GOTO   232
....................                } 
0237:  GOTO   25B
....................                 
....................                else{ 
....................                cont=1; 
0238:  MOVLW  01
0239:  MOVWF  29
....................                output_high(pin_d0);//habilita drive 
023A:  BSF    08.0
....................                output_high(pin_d1);//direcao 1 
023B:  BSF    08.1
....................                output_high(pin_d3);//direção 2 
023C:  BSF    08.3
....................                enable_interrupts(INT_TIMER2); 
023D:  BSF    03.5
023E:  BSF    0C.1
....................                disable_interrupts(INT_TIMER1); 
023F:  BCF    0C.0
....................                output_high(pin_c3);//led start 
0240:  BCF    03.5
0241:  BSF    07.3
....................                start=1; 
0242:  MOVWF  2C
....................                tempo=(tempo*4)-4;//tempo=(tempo*2)+5; 
0243:  RLF    27,W
0244:  MOVWF  39
0245:  RLF    28,W
0246:  MOVWF  3A
0247:  RLF    39,F
0248:  RLF    3A,F
0249:  MOVLW  FC
024A:  ANDWF  39,F
024B:  MOVLW  04
024C:  SUBWF  39,W
024D:  MOVWF  27
024E:  MOVF   3A,W
024F:  MOVWF  28
0250:  MOVLW  00
0251:  BTFSS  03.0
0252:  MOVLW  01
0253:  SUBWF  28,F
....................                delay_ms(400); 
0254:  MOVLW  02
0255:  MOVWF  39
0256:  MOVLW  C8
0257:  MOVWF  3A
0258:  CALL   08C
0259:  DECFSZ 39,F
025A:  GOTO   256
....................                } 
....................             } 
025B:  GOTO   1F0
....................          }  
....................                                  
....................          if(input(pin_a5)==1){//reset 
025C:  BTFSS  05.5
025D:  GOTO   278
....................          disable_interrupts(INT_TIMER1); 
025E:  BSF    03.5
025F:  BCF    0C.0
....................          disable_interrupts(INT_TIMER2); 
0260:  BCF    0C.1
....................          cont=0; 
0261:  BCF    03.5
0262:  CLRF   29
....................          tempo=0; 
0263:  CLRF   28
0264:  CLRF   27
....................          pisca=0; 
0265:  CLRF   32
....................          f_pisca=0;  
0266:  CLRF   33
....................          output_low(pin_e0);//led 15 
0267:  BSF    03.5
0268:  BCF    09.0
0269:  BCF    03.5
026A:  BCF    09.0
....................          output_low(pin_e1);//led 30 
026B:  BSF    03.5
026C:  BCF    09.1
026D:  BCF    03.5
026E:  BCF    09.1
....................          output_low(pin_e2);//led 45 
026F:  BSF    03.5
0270:  BCF    09.2
0271:  BCF    03.5
0272:  BCF    09.2
....................          zera(); 
0273:  CALL   0A1
....................          output_low(pin_c3);//led start 
0274:  BCF    07.3
....................          pausa=0;  
0275:  CLRF   34
....................          reset_cpu(); 
0276:  CLRF   0A
0277:  GOTO   000
....................          } 
0278:  GOTO   174
....................              
....................       } 
....................    // FIM DO PROGRAMA 
.................... } 
....................  
0279:  SLEEP

Configuration Fuses:
   Word  1: 3F36   HS WDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
