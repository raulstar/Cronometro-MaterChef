CCS PCM C Compiler, Version 4.074, 38112               31-mar-19 00:39

               Filename: C:\Users\Raulstar\Google Drive\Temp\Cronometro MaterChef\Cronometro MaterChef 2.lst

               ROM used: 344 words (4%)
                         Largest free fragment is 2048
               RAM used: 30 (8%) at main() level
                         31 (8%) worst case
               Stack:    5 worst case (2 in main + 3 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0AE
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  BTFSS  0B.4
001A:  GOTO   01D
001B:  BTFSC  0B.1
001C:  GOTO   036
001D:  MOVLW  8C
001E:  MOVWF  04
001F:  BTFSS  00.1
0020:  GOTO   023
0021:  BTFSC  0C.1
0022:  GOTO   039
0023:  MOVF   22,W
0024:  MOVWF  04
0025:  MOVF   23,W
0026:  MOVWF  77
0027:  MOVF   24,W
0028:  MOVWF  78
0029:  MOVF   25,W
002A:  MOVWF  79
002B:  MOVF   26,W
002C:  MOVWF  7A
002D:  MOVF   27,W
002E:  MOVWF  7B
002F:  MOVF   20,W
0030:  MOVWF  0A
0031:  SWAPF  21,W
0032:  MOVWF  03
0033:  SWAPF  7F,F
0034:  SWAPF  7F,W
0035:  RETFIE
0036:  BCF    0A.3
0037:  BCF    0A.4
0038:  GOTO   06F
0039:  BCF    0A.3
003A:  BCF    0A.4
003B:  GOTO   078
.................... /******************************************************************************* 
.................... *              Sistema de navegaï¿½ï¿½o para robï¿½s autï¿½nomos 
.................... *                           Drive duplo PWM Servo 
.................... *                             Auto Robotica 
.................... * 
.................... * Cronometro Master Chef:   Marco de 2019                                Raul S F 
.................... ******************************************************************************** 
.................... ******************************************************************************** 
.................... * Historico 
.................... * Revisao  
.................... * Revisao  
.................... * Revisao  
.................... ******************************************************************************** 
.................... */ 
....................  
.................... #include <16f877a.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
.................... * Configurações para gravação * 
.................... * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
....................  
.................... #FUSES NOWDT, HS, PUT, NOPROTECT, NODEBUG, NOBROWNOUT, NOLVP, NOCPD 
.................... #use delay(clock=4000000) 
003C:  MOVLW  38
003D:  MOVWF  04
003E:  BCF    03.7
003F:  MOVF   00,W
0040:  BTFSC  03.2
0041:  GOTO   050
0042:  MOVLW  01
0043:  MOVWF  78
0044:  CLRF   77
0045:  DECFSZ 77,F
0046:  GOTO   045
0047:  DECFSZ 78,F
0048:  GOTO   044
0049:  MOVLW  4A
004A:  MOVWF  77
004B:  DECFSZ 77,F
004C:  GOTO   04B
004D:  GOTO   04E
004E:  DECFSZ 00,F
004F:  GOTO   042
0050:  RETLW  00
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
.................... * Definição e inicialização dos port's * 
.................... * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
....................  
.................... #use fast_io(a) 
.................... #use standard_io(b) 
.................... #use fast_io(c) 
.................... #use fast_io(d) 
.................... //#use fast_io(b) 
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
.................... * Definição e inicialização das variáveis * 
.................... * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
.................... long int tempo=0; 
*
00B9:  BCF    03.5
00BA:  CLRF   29
00BB:  CLRF   2A
.................... int cont=0; 
00BC:  CLRF   2B
.................... int flag_15=0; 
00BD:  CLRF   2C
.................... int posiciona=0; 
00BE:  CLRF   2D
.................... int sensor=0; 
00BF:  CLRF   2E
.................... int pronto=0; 
00C0:  CLRF   2F
.................... long int pos=0; 
00C1:  CLRF   30
00C2:  CLRF   31
....................  
.................... Void zera(){ 
....................    if(input(pin_b0)==0)sensor=1; 
*
0051:  BSF    03.5
0052:  BSF    06.0
0053:  BCF    03.5
0054:  BTFSC  06.0
0055:  GOTO   058
0056:  MOVLW  01
0057:  MOVWF  2E
.................... while(sensor==1){ 
0058:  DECFSZ 2E,W
0059:  GOTO   06D
....................    output_high(pin_d0); 
005A:  BSF    08.0
....................    output_high(pin_d1); 
005B:  BSF    08.1
....................    output_high(pin_d3); 
005C:  BSF    08.3
....................    output_high(pin_d2); 
005D:  BSF    08.2
....................    output_high(pin_d4); 
005E:  BSF    08.4
....................    delay_ms(1); 
005F:  MOVLW  01
0060:  MOVWF  38
0061:  CALL   03C
....................    output_low(pin_d2);  
0062:  BCF    08.2
....................    output_low(pin_d4); 
0063:  BCF    08.4
....................    delay_ms(1); 
0064:  MOVLW  01
0065:  MOVWF  38
0066:  CALL   03C
....................    if(input(pin_b0)==1)sensor=0; 
0067:  BSF    03.5
0068:  BSF    06.0
0069:  BCF    03.5
006A:  BTFSC  06.0
006B:  CLRF   2E
....................     
....................    } 
006C:  GOTO   058
....................    sensor=0; 
006D:  CLRF   2E
.................... } 
006E:  RETLW  00
....................  
.................... #int_ext 
....................   
.................... void Sinal(void){ 
.................... zera(); 
006F:  CALL   051
.................... cont=0; 
0070:  CLRF   2B
.................... disable_interrupts(INT_TIMER2); 
0071:  BSF    03.5
0072:  BCF    0C.1
.................... } 
....................  
0073:  BCF    03.5
0074:  BCF    0B.1
0075:  BCF    0A.3
0076:  BCF    0A.4
0077:  GOTO   023
.................... #int_TIMER2 
.................... void  TIMER2_isr(void){ 
.................... static long acumulador=2;//15=estouro 2s 
*
00C3:  MOVLW  02
00C4:  MOVWF  32
00C5:  CLRF   33
.................... static long segundo=0; 
00C6:  CLRF   34
00C7:  CLRF   35
.................... static int i=0; 
00C8:  CLRF   36
....................  
....................    if(tempo!=0){ 
*
0078:  MOVF   29,F
0079:  BTFSS  03.2
007A:  GOTO   07E
007B:  MOVF   2A,F
007C:  BTFSC  03.2
007D:  GOTO   09C
....................    tempo--; 
007E:  MOVF   29,W
007F:  BTFSC  03.2
0080:  DECF   2A,F
0081:  DECF   29,F
....................    if(acumulador>0){ 
0082:  MOVF   32,F
0083:  BTFSS  03.2
0084:  GOTO   088
0085:  MOVF   33,F
0086:  BTFSC  03.2
0087:  GOTO   08D
....................    acumulador--; 
0088:  MOVF   32,W
0089:  BTFSC  03.2
008A:  DECF   33,F
008B:  DECF   32,F
....................    } 
....................    else{ 
008C:  GOTO   09B
....................    acumulador=2; 
008D:  CLRF   33
008E:  MOVLW  02
008F:  MOVWF  32
....................       if(i==0){ 
0090:  MOVF   36,F
0091:  BTFSS  03.2
0092:  GOTO   098
....................       output_high(pin_d2);  
0093:  BSF    08.2
....................       output_high(pin_d4); 
0094:  BSF    08.4
....................       i=1; 
0095:  MOVLW  01
0096:  MOVWF  36
....................       } 
....................       else{ 
0097:  GOTO   09B
....................       output_low(pin_d2);  
0098:  BCF    08.2
....................       output_low(pin_d4); 
0099:  BCF    08.4
....................       i=0; 
009A:  CLRF   36
....................       } 
....................       } 
....................     
....................    } 
....................    else{ 
009B:  GOTO   0AA
....................    cont=0; 
009C:  CLRF   2B
....................    disable_interrupts(INT_TIMER2); 
009D:  BSF    03.5
009E:  BCF    0C.1
....................    output_low(pin_e0);//led 15 
009F:  BCF    09.0
00A0:  BCF    03.5
00A1:  BCF    09.0
....................    output_low(pin_e1);//led 30 
00A2:  BSF    03.5
00A3:  BCF    09.1
00A4:  BCF    03.5
00A5:  BCF    09.1
....................    output_low(pin_e2);//led 45 
00A6:  BSF    03.5
00A7:  BCF    09.2
00A8:  BCF    03.5
00A9:  BCF    09.2
....................     
....................    } 
.................... } 
....................  
.................... //360°/1,8º=200 passos p volta 
.................... //motor 200 passo/rev 
.................... //drive div 1/8 
.................... //1600 passos/rev 
.................... //1 passo = 2 segundos 
....................  
00AA:  BCF    0C.1
00AB:  BCF    0A.3
00AC:  BCF    0A.4
00AD:  GOTO   023
.................... void main(void) { 
00AE:  CLRF   04
00AF:  BCF    03.7
00B0:  MOVLW  1F
00B1:  ANDWF  03,F
00B2:  BSF    03.5
00B3:  BSF    1F.0
00B4:  BSF    1F.1
00B5:  BSF    1F.2
00B6:  BCF    1F.3
00B7:  MOVLW  07
00B8:  MOVWF  1C
.................... setup_timer_2(T2_DIV_BY_16,255,16);//65,5ms 
*
00C9:  MOVLW  78
00CA:  MOVWF  78
00CB:  IORLW  06
00CC:  MOVWF  12
00CD:  MOVLW  FF
00CE:  BSF    03.5
00CF:  MOVWF  12
.................... disable_interrupts(INT_TIMER2); 
00D0:  BCF    0C.1
.................... ext_int_edge(L_TO_H);      // init interrupt triggering for button press 
00D1:  BSF    01.6
.................... enable_interrupts(INT_EXT);; 
00D2:  BCF    03.5
00D3:  BSF    0B.4
....................  
.................... disable_interrupts(INT_CCP1); 
00D4:  BSF    03.5
00D5:  BCF    0C.2
.................... setup_comparator(NC_NC_NC_NC); 
00D6:  MOVLW  07
00D7:  MOVWF  1C
00D8:  MOVF   05,W
00D9:  MOVLW  03
00DA:  MOVWF  77
00DB:  DECFSZ 77,F
00DC:  GOTO   0DB
00DD:  MOVF   1C,W
00DE:  BCF    03.5
00DF:  BCF    0D.6
.................... setup_vref(FALSE); 
00E0:  BSF    03.5
00E1:  CLRF   1D
.................... set_tris_a(0b11111111); 
00E2:  MOVLW  FF
00E3:  MOVWF  05
.................... set_tris_b(0b11000001); 
00E4:  MOVLW  C1
00E5:  MOVWF  06
.................... set_tris_c(0b11111111); 
00E6:  MOVLW  FF
00E7:  MOVWF  07
.................... set_tris_d(0b00000000); 
00E8:  MOVLW  00
00E9:  MOVWF  08
.................... set_tris_e(0b00000000); 
00EA:  BCF    09.0
00EB:  BCF    09.1
00EC:  BCF    09.2
.................... output_low(pin_e0); 
00ED:  BCF    09.0
00EE:  BCF    03.5
00EF:  BCF    09.0
.................... output_low(pin_e1); 
00F0:  BSF    03.5
00F1:  BCF    09.1
00F2:  BCF    03.5
00F3:  BCF    09.1
.................... output_low(pin_e2); 
00F4:  BSF    03.5
00F5:  BCF    09.2
00F6:  BCF    03.5
00F7:  BCF    09.2
.................... output_low(pin_d0); 
00F8:  BCF    08.0
.................... enable_interrupts(GLOBAL); 
00F9:  MOVLW  C0
00FA:  IORWF  0B,F
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
.................... * Loop principal * 
.................... * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
....................    while(TRUE){ 
....................     
....................       if((input(pin_a0)==1)&&(cont==0)){ 
00FB:  BTFSS  05.0
00FC:  GOTO   112
00FD:  MOVF   2B,F
00FE:  BTFSS  03.2
00FF:  GOTO   112
....................       tempo=30;//450=15 minutos 
0100:  CLRF   2A
0101:  MOVLW  1E
0102:  MOVWF  29
....................       output_high(pin_e0);//led 15 
0103:  BSF    03.5
0104:  BCF    09.0
0105:  BCF    03.5
0106:  BSF    09.0
....................       output_low(pin_e1);//led 30 
0107:  BSF    03.5
0108:  BCF    09.1
0109:  BCF    03.5
010A:  BCF    09.1
....................       output_low(pin_e2);//led 45 
010B:  BSF    03.5
010C:  BCF    09.2
010D:  BCF    03.5
010E:  BCF    09.2
....................       output_high(pin_d0);//habilita drive 
010F:  BSF    08.0
....................       output_high(pin_d1);//direcao 1 
0110:  BSF    08.1
....................       output_high(pin_d3);//direcao 3      
0111:  BSF    08.3
....................       } 
....................        
....................       if((input(pin_a1)==1)&&(cont==0)){ 
0112:  BTFSS  05.1
0113:  GOTO   129
0114:  MOVF   2B,F
0115:  BTFSS  03.2
0116:  GOTO   129
....................       tempo=60;//900=30 minutos 
0117:  CLRF   2A
0118:  MOVLW  3C
0119:  MOVWF  29
....................       output_low(pin_e0);//led 15 
011A:  BSF    03.5
011B:  BCF    09.0
011C:  BCF    03.5
011D:  BCF    09.0
....................       output_high(pin_e1);//led 30 
011E:  BSF    03.5
011F:  BCF    09.1
0120:  BCF    03.5
0121:  BSF    09.1
....................       output_low(pin_e2);//led 45 
0122:  BSF    03.5
0123:  BCF    09.2
0124:  BCF    03.5
0125:  BCF    09.2
....................       output_high(pin_d0);//habilita drive 
0126:  BSF    08.0
....................       output_high(pin_d1);//direcao 1 
0127:  BSF    08.1
....................       output_high(pin_d3);//direcao 3 
0128:  BSF    08.3
....................       } 
....................        
....................       if((input(pin_a2)==1)&&(cont==0)){ 
0129:  BTFSS  05.2
012A:  GOTO   140
012B:  MOVF   2B,F
012C:  BTFSS  03.2
012D:  GOTO   140
....................       tempo=90;//900=45 minutos 
012E:  CLRF   2A
012F:  MOVLW  5A
0130:  MOVWF  29
....................       output_low(pin_e0);//led 15 
0131:  BSF    03.5
0132:  BCF    09.0
0133:  BCF    03.5
0134:  BCF    09.0
....................       output_low(pin_e1);//led 30 
0135:  BSF    03.5
0136:  BCF    09.1
0137:  BCF    03.5
0138:  BCF    09.1
....................       output_high(pin_e2);//led 45 
0139:  BSF    03.5
013A:  BCF    09.2
013B:  BCF    03.5
013C:  BSF    09.2
....................       output_high(pin_d0);//habilita drive 
013D:  BSF    08.0
....................       output_high(pin_d1);//direcao 1 
013E:  BSF    08.1
....................       output_high(pin_d3);//direcao 3 
013F:  BSF    08.3
....................       } 
....................        
....................       if((input(pin_a4)==1)&&(cont==0)){ 
0140:  BTFSS  05.4
0141:  GOTO   14A
0142:  MOVF   2B,F
0143:  BTFSS  03.2
0144:  GOTO   14A
....................       cont=1; 
0145:  MOVLW  01
0146:  MOVWF  2B
....................       enable_interrupts(INT_TIMER2); 
0147:  BSF    03.5
0148:  BSF    0C.1
0149:  BCF    03.5
....................       } 
....................        
....................       if((input(pin_a5)==1)&&(cont==0)){ 
014A:  BTFSS  05.5
014B:  GOTO   156
014C:  MOVF   2B,F
014D:  BTFSS  03.2
014E:  GOTO   156
014F:  CLRF   28
0150:  BTFSC  0B.7
0151:  BSF    28.7
0152:  BCF    0B.7
....................       zera(); 
0153:  CALL   051
0154:  BTFSC  28.7
0155:  BSF    0B.7
....................       } 
....................    } 
0156:  GOTO   0FB
.................... // FIM DO PROGRAMA 
.................... } 
....................  
0157:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
